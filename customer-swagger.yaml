swagger: '2.0'
info:
  description: |
    This is a sample Customer service.
  version: "1.0"
  title: Customer Microservice
  termsOfService: http://swagger.io/terms/
  contact:
    email: harryarul@yahoo.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: cutomer
  description: Operations about customer
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
# schemes:
# - http
paths:
  /customer:
    post:
      tags:
      - customer
      summary: Create customer
      description: This can only be done by the Authorized customer.
      operationId: createCustomer
      produces:
      - application/json
      parameters:
      - in: body
        name: customer
        description: Created customer object
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Customer'      
        default:
          description: successful operation
  /customer/{custId}:
    get:
      tags:
      - customer
      summary: Get customer by customer Id
      operationId: getCustomerByName
      produces:
      - application/json
      parameters:
      - name: custId
        in: path
        description: The name that needs to be fetched. Use user1 for testing. 
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Invalid customer Id supplied
        404:
          description: Customer not found
    put:
      tags:
      - customer
      summary: Update customer
      description: This can only be done by the logged in customer.
      operationId: updateCustomer
      produces:
      - application/json
      parameters:
      - name: custId
        in: path
        description: customer Id that need to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: customer
        description: Update customer object
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Invalid customer user supplied
        404:
          description: Customer not found
    delete:
      tags:
      - customer
      summary: Delete customer
      description: This can only be done by the logged in customer.
      operationId: deleteCustomer
      produces:
      - application/json
      parameters:
      - name: custId
        in: path
        description: The customer that needs to be deleted
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid customer Id supplied
        404:
          description: Customer not found
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      cname:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      dob:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      customerStatus:
        type: integer
        format: int32
      address:
        type: array
        items: 
          $ref: '#/definitions/Address'
      attributes:
        type: array
        items:
          $ref: '#/definitions/Attributes'
    xml:
      name: Customer
  Attributes:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  Address:
    type: object
    properties:
      streetNo:
        type: integer
        format: int64
      streeName:
        type: string
      streeType:
        type: string
      suburb:
        type: string
      postCode:
        type: integer
        format: int64
      city:
        type: string
      country:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /Sazi/customer/1.0
schemes:
 - http